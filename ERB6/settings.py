"""
Django settings for ERB6 project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from django.contrib.messages import constants as messages
from pathlib import Path
from dotenv import load_dotenv
import os

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/
## Django use sessions to communitcate outsides

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SITE_SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True    ## 404.html will not respond if set to True
# DEBUG = False  ## If you set to False, then you need to set ALLOWED_HOSTS
## Production environment, set to False, then you need to set ALLOWED_HOSTS

## Cloud server IP

ALLOWED_HOSTS = [ "localhost", "127.0.0.1"]
""" ALLOWED_HOSTS = [*]    Production environment, you can use * to allow all hosts, but it is not recommended for security reasons."""

# Application definition
## Fundamental Build in libraries
INSTALLED_APPS = [             #register apps here
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',  ##CCS and photos
    'django.contrib.humanize',  ## Humanize the data, such as 1,000,000 to 1M
    'pages.apps.PagesConfig', #(register tell Django,program is in pages to run
    'listings.apps.ListingsConfig',  ## register the app
    'realtors.apps.RealtorsConfig',  ## register the app
    'debug_toolbar',
    'accounts.apps.AccountsConfig',  ## register the app
    'contacts.apps.ContactsConfig',  ## register the app

]

## Mostly Global Middleware, such as security, session, csrf, authentication, messages, clickjacking
MIDDLEWARE = [      ##login and logout sessions
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',      ##Token
    'django.contrib.auth.middleware.AuthenticationMiddleware',  ##login handle
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware"  ## if you have you own Middtleware, place this in front of yours
]

ROOT_URLCONF = 'ERB6.urls'    ## a class.attribute (urls a file)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], ## Register the templates folder
        ## BASE_DIR is Root here
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',   #tell Djano where to find templates
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ERB6.wsgi.application'
##  Server Gateway Communication
## If realtime Asynchronous  change to "asgi"

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'bcredb', ## / 'db.sqlite3',  ## When config postgresql , then update this database
        'USER': 'postgres',  ## Postgres is the default user
        'PASSWORD': os.getenv('DB_PASSWORD'),  ## Get the password from .env file
        'HOST': 'localhost',  ## Localhost is the default host
        'PORT': '5432',  ## Postgres default port

    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'        ## Set the time Zone

TIME_ZONE = 'Asia/Hong_Kong'   ## set login time log region
## 'UTC'  England time zone
USE_I18N = True                ## Multilanguages

USE_TZ = True                  ## Time zone


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')  ## define output static root here
STATIC_URL = 'static/'        ## URL in Templates (contains Static files)
STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'ERB6/static') ## the source
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  ##  Define the SQL size

INTERNAL_IPS = [
    "127.0.0.1",
]
## DECLARE THE MEDIA ROOT AND URL

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  ## Define the media root
MEDIA_URL = '/media/'  ## URL in Templates (contains Media files)

### ERROR in RED, SUCCESS in GREEN
MESSAGE_TAGS = {
    messages.ERROR: 'danger',  ## Change the error message to danger
    messages.SUCCESS: 'success',  ## Change the success message to success 
}


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  ## Use console to send email in development
EMAIL_HOST = 'smtp.gmail.com'  ## Gmail SMTP server
EMAIL_PORT = 587  ## Gmail SMTP port
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')  ## Get the email host user from .env file
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  ## Get the email host password from .env file
EMAIL_USE_TLS = True  ## Use TLS for secure connection


"""
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  ## Use SMTP to send email
EMAIL_HOST = 'smtp.gmail.com'  ## gmail SMTP server
EMAIL_PORT = 587  ## Gmail SMTP port
EMAIL_USE_TLS = True  ## Use TLS for secure connection
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')  ## Get the email host user from .env file
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  ## Get the email host password from .env file
"""